@insertIntoMaster(partIdx, insertType)
#dim dynamic partIdx
#dim dynamic insertType

	if !CFLAG:MASTER:의식있음
		setBit CFLAG:MASTER:무의식중사건, 3
	endif

	setBit CFLAG:MASTER:(200 + partIdx), insertType
	
	EXP:MASTER:partIdx++
	EXP:MASTER:삽입경험++

	call checkStd
	call checkVirgin
	call checkVirginParasite
	call increaseArousal(partIdx, 100)
	
	call onMasterInserted_m(partIdx, insertType)
	call onMasterInserted_e(partIdx, insertType)

	; 보지조임체크
	if isMasterInserted(121, 1)
		call checkTight(1, BASE:TARGET:자지크기)
	endif
	; 애널조임체크
	if isMasterInserted(123, 1)
		call checkTight(2, BASE:TARGET:자지크기)
	endif

@outFromMaster(partIdx, insertType)
#dim dynamic partIdx
#dim dynamic insertType

	clearBit CFLAG:MASTER:(200 + partIdx), insertType

@isMasterInserted(partIdx, insertType)
#function
#dim dynamic partIdx
#dim dynamic insertType

	returnf getBit(CFLAG:MASTER:(200 + partIdx), insertType)

@isInsertablePart(partIdx)
#function
#dim dynamic partIdx

	returnf partIdx == 101 || partIdx == 102 || partIdx == 115 || partIdx == 116 || partIdx == 121 || partIdx == 123 || partIdx == 124 || partIdx == 125